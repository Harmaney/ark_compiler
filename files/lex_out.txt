program 1 1 keyword
<<<<<<< HEAD
SegmentTree 1 9 identify
; 1 20 punc
var 2 1 keyword
a 2 5 identify
, 2 6 punc
sum 2 7 identify
, 2 10 punc
add 2 11 identify
: 2 14 punc
array 2 15 keyword
[ 2 20 punc
1 2 21 intVal
.. 2 22 punc
400020 2 24 intVal
] 2 30 punc
of 2 32 keyword
int64 2 35 keyword
; 2 40 punc
var 3 1 keyword
n 3 5 identify
, 3 6 punc
m 3 7 identify
, 3 8 punc
x 3 9 identify
, 3 10 punc
y 3 11 identify
, 3 12 punc
z 3 13 identify
, 3 14 punc
opt 3 15 identify
: 3 18 punc
int64 3 19 keyword
; 3 24 punc
var 4 1 keyword
i 4 5 identify
: 4 6 punc
longint 4 7 keyword
; 4 14 punc
procedure 6 1 keyword
color 6 11 identify
( 6 16 punc
l 6 17 identify
, 6 18 punc
r 6 19 identify
, 6 20 punc
rt 6 21 identify
, 6 23 punc
z 6 24 identify
: 6 25 punc
int64 6 26 keyword
) 6 31 punc
; 6 32 punc
begin 7 1 keyword
add 8 5 identify
[ 8 8 punc
rt 8 9 identify
] 8 11 punc
:= 8 12 punc
add 8 14 identify
[ 8 17 punc
rt 8 18 identify
] 8 20 punc
+ 8 21 punc
z 8 22 identify
; 8 23 punc
sum 9 5 identify
[ 9 8 punc
rt 9 9 identify
] 9 11 punc
:= 9 12 punc
sum 9 14 identify
[ 9 17 punc
rt 9 18 identify
] 9 20 punc
+ 9 21 punc
z 9 22 identify
* 9 23 punc
( 9 24 punc
r 9 25 identify
- 9 26 punc
l 9 27 identify
+ 9 28 punc
1 9 29 intVal
) 9 30 punc
; 9 31 punc
end 10 1 keyword
; 10 4 punc
procedure 12 1 keyword
push_col 12 11 identify
( 12 19 punc
l 12 20 identify
, 12 21 punc
r 12 22 identify
, 12 23 punc
rt 12 24 identify
: 12 26 punc
int64 12 27 keyword
) 12 32 punc
; 12 33 punc
var 13 1 keyword
m 13 5 identify
: 13 6 punc
int64 13 7 keyword
; 13 12 punc
begin 14 1 keyword
if 15 5 keyword
add 15 8 identify
[ 15 11 punc
rt 15 12 identify
] 15 14 punc
<> 15 15 punc
0 15 17 intVal
then 15 19 keyword
begin 16 5 keyword
m 17 9 identify
:= 17 10 punc
( 17 12 punc
l 17 13 identify
+ 17 14 punc
r 17 15 identify
) 17 16 punc
div 17 18 keyword
2 17 22 intVal
; 17 23 punc
color 18 9 identify
( 18 14 punc
l 18 15 identify
, 18 16 punc
m 18 17 identify
, 18 18 punc
rt 18 19 identify
* 18 21 punc
2 18 22 intVal
, 18 23 punc
add 18 24 identify
[ 18 27 punc
rt 18 28 identify
] 18 30 punc
) 18 31 punc
; 18 32 punc
color 19 9 identify
( 19 14 punc
m 19 15 identify
+ 19 16 punc
1 19 17 intVal
, 19 18 punc
r 19 19 identify
, 19 20 punc
rt 19 21 identify
* 19 23 punc
2 19 24 intVal
+ 19 25 punc
1 19 26 intVal
, 19 27 punc
add 19 28 identify
[ 19 31 punc
rt 19 32 identify
] 19 34 punc
) 19 35 punc
; 19 36 punc
add 20 9 identify
[ 20 12 punc
rt 20 13 identify
] 20 15 punc
:= 20 16 punc
0 20 18 intVal
; 20 19 punc
end 21 5 keyword
; 21 8 punc
end 22 1 keyword
; 22 4 punc
procedure 23 1 keyword
modify 23 11 identify
( 23 17 punc
l 23 18 identify
, 23 19 punc
r 23 20 identify
, 23 21 punc
rt 23 22 identify
, 23 24 punc
nowl 23 25 identify
, 23 29 punc
nowr 23 30 identify
, 23 34 punc
z 23 35 identify
: 23 36 punc
int64 23 37 keyword
) 23 42 punc
; 23 43 punc
var 24 1 keyword
m 24 5 identify
: 24 6 punc
int64 24 7 keyword
; 24 12 punc
begin 25 1 keyword
if 26 5 keyword
( 26 8 punc
nowl 26 9 identify
<= 26 13 punc
l 26 15 identify
) 26 16 punc
and 26 18 keyword
( 26 22 punc
nowr 26 23 identify
>= 26 27 punc
r 26 29 identify
) 26 30 punc
then 26 32 keyword
begin 27 5 keyword
color 28 9 identify
( 28 14 punc
l 28 15 identify
, 28 16 punc
r 28 17 identify
, 28 18 punc
rt 28 19 identify
, 28 21 punc
z 28 22 identify
) 28 23 punc
; 28 24 punc
exit 29 9 identify
( 29 13 punc
) 29 14 punc
; 29 15 punc
end 30 5 keyword
; 30 8 punc
push_col 31 5 identify
( 31 13 punc
l 31 14 identify
, 31 15 punc
r 31 16 identify
, 31 17 punc
rt 31 18 identify
) 31 20 punc
; 31 21 punc
m 32 5 identify
:= 32 6 punc
( 32 8 punc
l 32 9 identify
+ 32 10 punc
r 32 11 identify
) 32 12 punc
div 32 14 keyword
2 32 18 intVal
; 32 19 punc
if 33 5 keyword
nowl 33 8 identify
<= 33 12 punc
m 33 14 identify
then 33 16 keyword
begin 34 5 keyword
modify 35 9 identify
( 35 15 punc
l 35 16 identify
, 35 17 punc
m 35 18 identify
, 35 19 punc
rt 35 20 identify
* 35 22 punc
2 35 23 intVal
, 35 24 punc
nowl 35 25 identify
, 35 29 punc
nowr 35 30 identify
, 35 34 punc
z 35 35 identify
) 35 36 punc
; 35 37 punc
end 36 5 keyword
; 36 8 punc
if 37 5 keyword
nowr 37 8 identify
> 37 12 punc
m 37 13 identify
then 37 15 keyword
begin 38 5 keyword
modify 39 9 identify
( 39 15 punc
m 39 16 identify
+ 39 17 punc
1 39 18 intVal
, 39 19 punc
r 39 20 identify
, 39 21 punc
rt 39 22 identify
* 39 24 punc
2 39 25 intVal
+ 39 26 punc
1 39 27 intVal
, 39 28 punc
nowl 39 29 identify
, 39 33 punc
nowr 39 34 identify
, 39 38 punc
z 39 39 identify
) 39 40 punc
; 39 41 punc
end 40 5 keyword
; 40 8 punc
sum 41 5 identify
[ 41 8 punc
rt 41 9 identify
] 41 11 punc
:= 41 12 punc
sum 41 14 identify
[ 41 17 punc
rt 41 18 identify
* 41 20 punc
2 41 21 intVal
] 41 22 punc
+ 41 23 punc
sum 41 24 identify
[ 41 27 punc
rt 41 28 identify
* 41 30 punc
2 41 31 intVal
+ 41 32 punc
1 41 33 intVal
] 41 34 punc
; 41 35 punc
exit 42 5 identify
( 42 9 punc
) 42 10 punc
; 42 11 punc
end 43 1 keyword
; 43 4 punc
function 45 1 keyword
query 45 10 identify
( 45 15 punc
l 45 16 identify
, 45 17 punc
r 45 18 identify
, 45 19 punc
rt 45 20 identify
, 45 22 punc
nowl 45 23 identify
, 45 27 punc
nowr 45 28 identify
: 45 32 punc
int64 45 33 keyword
) 45 38 punc
: 45 39 punc
int64 45 40 keyword
; 45 45 punc
var 46 1 keyword
m 46 5 identify
, 46 6 punc
ans 46 7 identify
: 46 10 punc
int64 46 11 keyword
; 46 16 punc
begin 47 1 keyword
if 49 5 keyword
( 49 8 punc
nowl 49 9 identify
<= 49 13 punc
l 49 15 identify
) 49 16 punc
and 49 18 keyword
( 49 22 punc
nowr 49 23 identify
>= 49 27 punc
r 49 29 identify
) 49 30 punc
then 49 32 keyword
begin 50 5 keyword
query 51 9 identify
:= 51 14 punc
sum 51 16 identify
[ 51 19 punc
rt 51 20 identify
] 51 22 punc
; 51 23 punc
exit 52 9 identify
( 52 13 punc
) 52 14 punc
; 52 15 punc
end 53 5 keyword
; 53 8 punc
push_col 54 5 identify
( 54 13 punc
l 54 14 identify
, 54 15 punc
r 54 16 identify
, 54 17 punc
rt 54 18 identify
) 54 20 punc
; 54 21 punc
m 55 5 identify
:= 55 6 punc
( 55 8 punc
l 55 9 identify
+ 55 10 punc
r 55 11 identify
) 55 12 punc
div 55 14 keyword
2 55 18 intVal
; 55 19 punc
ans 56 5 identify
:= 56 8 punc
0 56 10 intVal
; 56 11 punc
if 57 5 keyword
nowl 57 8 identify
<= 57 12 punc
m 57 14 identify
then 57 16 keyword
begin 58 5 keyword
ans 59 9 identify
:= 59 12 punc
ans 59 14 identify
+ 59 17 punc
query 59 18 identify
( 59 23 punc
l 59 24 identify
, 59 25 punc
m 59 26 identify
, 59 27 punc
rt 59 28 identify
* 59 30 punc
2 59 31 intVal
, 59 32 punc
nowl 59 33 identify
, 59 37 punc
nowr 59 38 identify
) 59 42 punc
; 59 43 punc
end 60 5 keyword
; 60 8 punc
if 61 5 keyword
( 61 7 punc
nowr 61 8 identify
> 61 12 punc
m 61 13 identify
) 61 14 punc
then 61 16 keyword
begin 62 5 keyword
ans 63 9 identify
:= 63 12 punc
ans 63 14 identify
+ 63 17 punc
query 63 18 identify
( 63 23 punc
m 63 24 identify
+ 63 25 punc
1 63 26 intVal
, 63 27 punc
r 63 28 identify
, 63 29 punc
rt 63 30 identify
* 63 32 punc
2 63 33 intVal
+ 63 34 punc
1 63 35 intVal
, 63 36 punc
nowl 63 37 identify
, 63 41 punc
nowr 63 42 identify
) 63 46 punc
; 63 47 punc
end 64 5 keyword
; 64 8 punc
query 65 5 identify
:= 65 10 punc
ans 65 12 identify
; 65 15 punc
end 66 1 keyword
; 66 4 punc
procedure 68 1 keyword
build 68 11 identify
( 68 16 punc
l 68 17 identify
, 68 18 punc
r 68 19 identify
, 68 20 punc
rt 68 21 identify
: 68 23 punc
int64 68 24 keyword
) 68 29 punc
; 68 30 punc
var 69 1 keyword
m 69 5 identify
: 69 6 punc
int64 69 7 keyword
; 69 12 punc
begin 70 1 keyword
add 71 5 identify
[ 71 8 punc
rt 71 9 identify
] 71 11 punc
:= 71 12 punc
0 71 14 intVal
; 71 15 punc
if 72 5 keyword
l 72 8 identify
= 72 9 punc
r 72 10 identify
then 72 12 keyword
begin 73 5 keyword
sum 74 9 identify
[ 74 12 punc
rt 74 13 identify
] 74 15 punc
:= 74 16 punc
a 74 18 identify
[ 74 19 punc
l 74 20 identify
] 74 21 punc
; 74 22 punc
exit 75 9 identify
( 75 13 punc
) 75 14 punc
; 75 15 punc
end 76 5 keyword
; 76 8 punc
m 77 5 identify
:= 77 6 punc
( 77 8 punc
l 77 9 identify
+ 77 10 punc
r 77 11 identify
) 77 12 punc
div 77 14 keyword
2 77 18 intVal
; 77 19 punc
build 78 5 identify
( 78 10 punc
l 78 11 identify
, 78 12 punc
m 78 13 identify
, 78 14 punc
rt 78 15 identify
* 78 17 punc
2 78 18 intVal
) 78 19 punc
; 78 20 punc
build 79 5 identify
( 79 10 punc
m 79 11 identify
+ 79 12 punc
1 79 13 intVal
, 79 14 punc
r 79 15 identify
, 79 16 punc
rt 79 17 identify
* 79 19 punc
2 79 20 intVal
+ 79 21 punc
1 79 22 intVal
) 79 23 punc
; 79 24 punc
sum 80 5 identify
[ 80 8 punc
rt 80 9 identify
] 80 11 punc
:= 80 12 punc
sum 80 14 identify
[ 80 17 punc
rt 80 18 identify
* 80 20 punc
2 80 21 intVal
] 80 22 punc
+ 80 23 punc
sum 80 24 identify
[ 80 27 punc
rt 80 28 identify
* 80 30 punc
2 80 31 intVal
+ 80 32 punc
1 80 33 intVal
] 80 34 punc
; 80 35 punc
end 81 1 keyword
; 81 4 punc
begin 83 1 keyword
read 84 5 identify
( 84 9 punc
n 84 10 identify
) 84 11 punc
; 84 12 punc
read 85 5 identify
( 85 9 punc
m 85 10 identify
) 85 11 punc
; 85 12 punc
for 86 5 keyword
i 86 9 identify
:= 86 10 punc
1 86 12 intVal
to 86 14 keyword
n 86 17 identify
do 86 19 keyword
begin 87 5 keyword
read 88 9 identify
( 88 13 punc
a 88 14 identify
[ 88 15 punc
i 88 16 identify
] 88 17 punc
) 88 18 punc
; 88 19 punc
end 89 5 keyword
; 89 8 punc
build 90 5 identify
( 90 10 punc
1 90 11 intVal
, 90 12 punc
n 90 13 identify
, 90 14 punc
1 90 15 intVal
) 90 16 punc
; 90 17 punc
for 91 5 keyword
i 91 9 identify
:= 91 10 punc
1 91 12 intVal
to 91 14 keyword
m 91 17 identify
do 91 19 keyword
begin 92 5 keyword
read 93 9 identify
( 93 13 punc
opt 93 14 identify
) 93 17 punc
; 93 18 punc
if 94 9 keyword
opt 94 12 identify
= 94 15 punc
1 94 16 intVal
then 94 18 keyword
begin 95 9 keyword
read 96 13 identify
( 96 17 punc
x 96 18 identify
) 96 19 punc
; 96 20 punc
read 97 13 identify
( 97 17 punc
y 97 18 identify
) 97 19 punc
; 97 20 punc
read 98 13 identify
( 98 17 punc
z 98 18 identify
) 98 19 punc
; 98 20 punc
modify 99 13 identify
( 99 19 punc
1 99 20 intVal
, 99 21 punc
n 99 22 identify
, 99 23 punc
1 99 24 intVal
, 99 25 punc
x 99 26 identify
, 99 27 punc
y 99 28 identify
, 99 29 punc
z 99 30 identify
) 99 31 punc
; 99 32 punc
end 100 9 keyword
; 100 12 punc
if 101 9 keyword
opt 101 12 identify
= 101 15 punc
2 101 16 intVal
then 101 18 keyword
begin 102 9 keyword
read 103 13 identify
( 103 17 punc
x 103 18 identify
) 103 19 punc
; 103 20 punc
read 104 13 identify
( 104 17 punc
y 104 18 identify
) 104 19 punc
; 104 20 punc
write 105 13 identify
( 105 18 punc
query 105 19 identify
( 105 24 punc
1 105 25 intVal
, 105 26 punc
n 105 27 identify
, 105 28 punc
1 105 29 intVal
, 105 30 punc
x 105 31 identify
, 105 32 punc
y 105 33 identify
) 105 34 punc
) 105 35 punc
; 105 36 punc
end 106 9 keyword
; 106 12 punc
end 107 5 keyword
; 107 8 punc
end 108 1 keyword
. 108 4 punc
=======
Hello 1 9 identify
; 1 14 punc
var 2 1 keyword
i 2 5 identify
: 2 6 punc
record 2 7 keyword
name 3 5 identify
: 3 9 punc
string 3 10 keyword
; 3 16 punc
age 4 5 identify
: 4 8 punc
integer 4 9 keyword
; 4 16 punc
end 5 1 keyword
; 5 4 punc
begin 6 1 keyword
i 7 5 identify
. 7 6 punc
name 7 7 identify
:= 7 11 punc
123 7 12 stringVal
; 7 18 punc
i 8 5 identify
. 8 6 punc
age 8 7 identify
:= 8 10 punc
2 8 12 intVal
; 8 13 punc
write 9 5 identify
( 9 10 punc
i 9 11 identify
. 9 12 punc
name 9 13 identify
, 9 17 punc
i 9 18 identify
. 9 19 punc
age 9 20 identify
) 9 23 punc
; 9 24 punc
end 10 1 keyword
. 10 4 punc
>>>>>>> 2546fbf27f801270f1f21b41a804935fb5751e57
